<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhzl.drp.dao.RolePermissionInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lhzl.drp.model.RolePermissionInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="roleId" property="roleid" jdbcType="BIGINT" />
    <result column="pmsnId" property="pmsnid" jdbcType="BIGINT" />
    <result column="createby" property="createby" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateby" property="updateby" jdbcType="VARCHAR" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, roleId, pmsnId, createby, createTime, updateby, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tbl_rolepermissioninfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tbl_rolepermissioninfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lhzl.drp.model.RolePermissionInfo" >
    insert into tbl_rolepermissioninfo (id, roleId, pmsnId, 
      createby, createTime, updateby, 
      updateTime)
    values (#{id,jdbcType=BIGINT}, #{roleid,jdbcType=BIGINT}, #{pmsnid,jdbcType=BIGINT}, 
      #{createby,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lhzl.drp.model.RolePermissionInfo" >
    insert into tbl_rolepermissioninfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="pmsnid != null" >
        pmsnId,
      </if>
      <if test="createby != null" >
        createby,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updateby != null" >
        updateby,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=BIGINT},
      </if>
      <if test="pmsnid != null" >
        #{pmsnid,jdbcType=BIGINT},
      </if>
      <if test="createby != null" >
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null" >
        #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhzl.drp.model.RolePermissionInfo" >
    update tbl_rolepermissioninfo
    <set >
      <if test="roleid != null" >
        roleId = #{roleid,jdbcType=BIGINT},
      </if>
      <if test="pmsnid != null" >
        pmsnId = #{pmsnid,jdbcType=BIGINT},
      </if>
      <if test="createby != null" >
        createby = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateby != null" >
        updateby = #{updateby,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhzl.drp.model.RolePermissionInfo" >
    update tbl_rolepermissioninfo
    set roleId = #{roleid,jdbcType=BIGINT},
      pmsnId = #{pmsnid,jdbcType=BIGINT},
      createby = #{createby,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateby = #{updateby,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>